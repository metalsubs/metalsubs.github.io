{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/layouts/MainLayout.jsx"],"names":["Component","Wrapper","styled","div","Container","p","theme","breakpoints","xl","Songs","Link","GatsbyLink","media","greaterThan","lessThan","CustomImage","Img","Description","between","BackgroundLayer","image","MapResponse","songs","title","length","map","song","key","path","to","fluid","alt","data-name","base64","result","data","allMarkdownRemark","nodes","frontmatter","covers","childImageSharp","pageQuery","Main","main","Content","MainLayout","children","useStaticQuery","siteTitle","site","siteMetadata"],"mappings":"66BAUA,IA0HoBA,EA1HdC,EAAUC,IAAOC,IAAV,oEAAGD,CAAH,+BAKPE,EAAYF,IAAOC,IAAV,sEAAGD,CAAH,6CAEA,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,YAAYC,MAIlCC,EAAQP,IAAOC,IAAV,kEAAGD,CAAH,8HAOI,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,YAAYC,MAGlCE,EAAOR,YAAOS,QAAV,iEAAGT,CAAH,4KAcNU,IAAMC,YAAY,KAAlBD,CAdM,KAmBNA,IAAME,SAAS,KAAfF,CAnBM,MAyBJG,EAAcb,YAAOc,KAAV,wEAAGd,CAAH,iBAIXe,EAAcf,IAAOC,IAAV,wEAAGD,CAAH,2MAMbU,IAAMC,YAAY,KAAlBD,CANa,KAUbA,IAAMM,QAAQ,KAAM,KAApBN,CAVa,KAcbA,IAAMM,QAAQ,KAAM,KAApBN,CAda,KAkBbA,IAAME,SAAS,KAAfF,CAlBa,MAiCXO,EAAkBjB,IAAOC,IAAV,4EAAGD,CAAH,yJACK,SAAAG,GAAC,OAAIA,EAAEe,SA+ClBC,WATKrB,EA1BF,SAAC,GAAe,IAAbsB,EAAY,EAAZA,MACnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAACtB,EAAD,KACE,kBAACG,EAAD,KACE,kBAACK,EAAD,KACGa,GACCA,EAAME,OAAS,GACfF,EAAMG,KAAI,SAAAC,GAAI,OACZ,kBAAChB,EAAD,CAAMiB,IAAKD,EAAKE,KAAMC,GAAIH,EAAKE,MAC7B,kBAACb,EAAD,CAAae,MAAOJ,EAAKN,MAAOW,IAAKL,EAAKH,QAC1C,kBAACN,EAAD,KAAcS,EAAKH,OACnB,kBAACJ,EAAD,CACEa,YAAU,kBACVZ,MAAOM,EAAKN,MAAMa,kBAWL,SAAAC,GAAM,OACrClC,EAAU,CACRsB,MAAOY,EAAOC,KAAKC,kBAAkBC,MAAMZ,KAAI,SAAAC,GAAI,MAAK,CACtDE,KAAMF,EAAKY,YAAYV,KACvBL,MAAOG,EAAKY,YAAYf,MACxBH,MAAOM,EAAKY,YAAYC,OAAOb,KAAKc,gBAAgBV,cAMnD,IAAMW,EAAS,a,kCC/ItB,iGASMC,EAAOxC,IAAOyC,KAAV,sEAAGzC,CAAH,6EAOJ0C,EAAU1C,IAAOC,IAAV,yEAAGD,CAAH,4CAGE,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,YAAYC,MA0BzBqC,IAvBI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACdX,EAAOY,yBAAe,cAU5B,OACE,kBAAC,IAAD,CAAezC,MAAOA,KACpB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQ0C,UAAWb,EAAKc,KAAKC,aAAa3B,QAC1C,kBAACmB,EAAD,KACE,kBAACE,EAAD,KAAUE,IAEZ,kBAAC,IAAD","file":"component---src-pages-index-js-8652452ecdf1059db862.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Link as GatsbyLink } from \"gatsby\"\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\"\n\nimport MainLayout from \"../layouts/MainLayout.jsx\"\nimport SEO from \"../components/SEO\"\nimport media from \"../utils/media-query\"\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin: 0 1rem;\n`\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: ${p => p.theme.breakpoints.xl};\n  margin: 0 auto;\n`\n\nconst Songs = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-content: stretch;\n  padding: 0;\n  max-width: ${p => p.theme.breakpoints.xl};\n`\n\nconst Link = styled(GatsbyLink)`\n  width: 100%;\n  display: block;\n  margin: 1rem;\n  position: relative;\n\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease-in-out;\n\n  :hover {\n    transform: scale(1.05, 1.05);\n  }\n\n\n  ${media.greaterThan(\"md\")`\n    width: calc((100% / 2) - 3rem);\n    height: calc(100% / 2);\n  `}\n\n  ${media.lessThan(\"md\")`\n    width: 100%;\n    height: 100%;\n  `}\n`\n\nconst CustomImage = styled(Img)`\n  width: 100%;\n`\n\nconst Description = styled.div`\n  position: absolute;\n  background-color: rgba(0, 0, 0, 0.15);\n\n  transition: all 0.3s ease-in-out;\n\n  ${media.greaterThan(\"xl\")`\n    font-size: 2rem;\n  `}\n\n  ${media.between(\"lg\", \"xl\")`\n    font-size: 1.5rem;\n  `}\n\n  ${media.between(\"md\", \"lg\")`\n    font-size: 1rem;\n  `}\n\n  ${media.lessThan(\"md\")`\n    position: relative;\n    font-size: 2.5rem;\n    text-align: center;\n  `}\n  bottom: 0;\n  left: 0;\n  color: white;\n  z-index: 16;\n  width: 100%;\n  font-family: Cardo;\n  font-size: 1.5rem;\n  padding: 1rem;\n`\n\nconst BackgroundLayer = styled.div`\n  background-image: url(${p => p.image});\n  background-size: cover;\n  background-position: center;\n  opacity: 0.3;\n  position: absolute;\n  top: 0%;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 12;\n`\n\nconst IndexPage = ({ songs }) => {\n  return (\n    <MainLayout>\n      <SEO title=\"Home\" />\n      <Wrapper>\n        <Container>\n          <Songs>\n            {songs &&\n              songs.length > 0 &&\n              songs.map(song => (\n                <Link key={song.path} to={song.path}>\n                  <CustomImage fluid={song.image} alt={song.title} />\n                  <Description>{song.title}</Description>\n                  <BackgroundLayer\n                    data-name=\"BackgroundLayer\"\n                    image={song.image.base64}\n                  />\n                </Link>\n              ))}\n          </Songs>\n        </Container>\n      </Wrapper>\n    </MainLayout>\n  )\n}\n\nconst MapResponse = Component => result =>\n  Component({\n    songs: result.data.allMarkdownRemark.nodes.map(song => ({\n      path: song.frontmatter.path,\n      title: song.frontmatter.title,\n      image: song.frontmatter.covers.song.childImageSharp.fluid,\n    })),\n  })\n\nexport default MapResponse(IndexPage)\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { layout: { eq: \"video\" } } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          path\n          covers {\n            song {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          bandID\n          songID\n          date\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled, { ThemeProvider } from \"styled-components\"\n\nimport GlobalStyles from \"../components/GlobalStyles\"\nimport Header from \"../components/Header\"\nimport Footer from \"../components/Footer\"\nimport theme from '../utils/theme'\n\nconst Main = styled.main`\n  margin-top: 100px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: ${p => p.theme.breakpoints.xl};\n`\n\nconst MainLayout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <Main>\n        <Content>{children}</Content>\n      </Main>\n      <Footer />\n    </ThemeProvider>\n  )\n}\n\nexport default MainLayout\n"],"sourceRoot":""}