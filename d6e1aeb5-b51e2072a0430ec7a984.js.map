{"version":3,"sources":["webpack:///./node_modules/video.js/dist/video.es.js"],"names":["history","log","createLogger","name","logByType","level","_len","arguments","length","args","Array","_key","type","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","concat","splice","console","fn","info","test","isArray","LogByTypeFactory","subname","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","toString","Object","prototype","keys","object","isObject","each","forEach","key","assign","target","sources","apply","source","value","isPlain","call","constructor","computedStyle","el","prop","getComputedStyle","computedStyleValue","getPropertyValue","isNonBlankString","str","Boolean","trim","throwIfWhitespace","indexOf","isReal","document","isEl","nodeType","isInFrame","parent","self","x","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","createElement","getOwnPropertyNames","propName","val","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","removeClass","classToRemove","remove","split","c","join","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","obj","knownBooleans","attrs","i","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","result","k","undefined","height","parseFloat","width","findPosition","box","left","top","docEl","documentElement","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","Math","round","getPointerPosition","event","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","y","max","min","isTextNode","emptyEl","removeChild","normalizeContent","map","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","videojs","$","$$","Dom","freeze","__proto__","_windowLoaded","autoSetup","options","vids","slice","getElementsByTagName","audios","divs","mediaEls","e","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","FakeWeakMap","createStyleElement","style","setTextContent","styleSheet","cssText","_guid","newGUID","WeakMap","this","vdata","floor","performance","now","Date","data","_proto","set","access","get","_supportsPassive","DomData","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","passiveEvents","on","guid","hash","handlersCopy","m","n","opts","defineProperty","supportsPassive","passive","attachEvent","removeType","t","trigger","elemData","ownerDocument","bubbles","targetData","one","func","any","EVENT_MAP","Events","bind","uid","bound","throttle","last","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","_this","Map","oldTimeout","clearTimeout","timeout","size","isEvented","eventBusEl_","every","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","_this3","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toLowerCase","string","replace","w","toTitleCase","mergeOptions","Component","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","SetSham","name_","el_","children_","childIndex_","childNameIndex_","Set","set_","_proto2","thisArg","setTimeoutIds_","setIntervalIds_","rafIds_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","dispose","isDisposed","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","match","index","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","names","reduce","acc","currentChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","isNaN","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","supportsRaf_","cancelAnimationFrame","_this4","_ref","idName","cancelName","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","pop","IS_IPOD","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","version","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","browser","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","start","end","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","browserApi","FullscreenApi","prefixed","apiMap","specApi","_i","MediaError","message","defaultMessages","status","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","json","src","textTracks","addedTrack","addRemoteTextTrack","addCue","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","MODAL_CLASS_NAME","role","descEl_","description","tabIndex","label","previouslyActiveEl_","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","close","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","isEventKey","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","disableOthers","list","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","url","props","a","href","div","addToBody","host","protocol","innerHTML","details","location","getAbsoluteURL","getFileExtension","path","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","parse","groupCollapsed","groupEnd","flush","loadTrack","uri","crossOrigin","cors","err","response","responseBody","loaded_","tech_","TextTrack","_Track","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","defineProperties","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","HTMLTrackElement","load","NONE","LOADING","LOADED","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","onload","onerror","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","Promise","reject","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","muted","seekable","volume","allowedSetters","setMuted","setVolume","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","fixSource","mimetype","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleMouseOver","handleMouseOut","clickHandler","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","sourceIsEncrypted","usingPlugin","eme","sessions","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","s","h","gm","gh","Infinity","implementation","formatTime","TimeDisplay","updateContent","updateTextNode_","labelText_","textNode_","time","formattedTime_","oldNode","replaceChild","CurrentTimeDisplay","_TimeDisplay","ended","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","clamp","number","Number","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","write","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","update_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","codes","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","playProgressBar","seekBarEl","PictureInPictureToggle","handlePictureInPictureChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","checkVolumeSupport","throttledHandleMouseMove","orientationClass","MuteToggle","checkMuteSupport","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","item","MenuButton","buttonClass","menu","handleMenuKeyUp","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","title","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","values","setSelectedOption","JSON","localStorage","getItem","setItem","stringify","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","immediate","debounced","_later","cancel","debounce","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","trackLive_","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","abs","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","handleFirstTimeupdate","timeDiff","skipNextSeeked_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","enumerable","configurable","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","defineLazyProperty","getValue","setter","writable","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","crossorigin","links","linkEl","techGet_","techCall_","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","manualAutoplay_","promise","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","doubleClick","userWasActive","toggleFullscreenClass_","targetPlayer","isFs","fullscreenElement","matches","fullscreen","msMatchesSelector","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","media","reduceRight","_this8","resolve","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","isScrubbing","applyInitTime_","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","_this10","enterFullWindow","exitFullscreenHelper_","_this11","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","isContentEditable","excludeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this12","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","b","_this13","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this14","sourceTech","_this15","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","String","toJSON","createModal","_this16","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this17","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","navigationUI","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","instance","getEventHash","Plugin","VERSION","isBasic","p","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","hasPlugin","normalizeId","videojs$1","getPlayer","TypeError","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","superClass","subClassMethods","subClass","methods","super_","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","xhr","dom","resolveUrl","baseURL","relativeURL","buildAbsoluteURL","resolveManifestRedirect","handleManifestRedirect","req","responseURL","classCallCheck","Constructor","createClass","protoProps","staticProps","inherits","create","setPrototypeOf","possibleConstructorReturn","ReferenceError","slicedToArray","arr","Symbol","iterator","_arr","_n","_d","_e","_s","done","sliceIterator","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","master","mediaType","groupKey","mediaGroups","labelKey","mediaProperties","updateMaster","playlist","playlists","segments","endList","mediaSequence","mergedPlaylist","offset","updateSegments","segment","baseUri","resolvedUri","resolveSegmentUris","createPlaylistID","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","targetDuration","PlaylistLoader","srcUrl","hls","getPrototypeOf","_options$withCredenti","withCredentials","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","startingState","responseText","customParser","addParser","mapper","addTagMapper","manifest","media_","mediaUpdateTimeout","stopRequest","finalRenditionTimeout","oldRequest","onreadystatechange","abort","isFinalRendition","delay","mediaChange","started","intervalDuration","endSequence","expired","backward","forward","precise","backwardDuration","forwardDuration","totalDuration","sumDurations","startIndex","endIndex","durations","safeLiveIndex","liveEdgePadding","lastSegmentDuration","safeDistance","distanceFromEnd","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","scale","pow","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","BANDWIDTH","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","byteLength","headers","responseHeaders","timedout","aborted","statusCode","originalAbort","segmentXhrHeaders","byterange","byterangeEnd","Range","textRange","range","formatHexString","formatAsciiString","fromCharCode","createTransferableMessage","transferable","ArrayBuffer","isView","bytes","buffer","byteOffset","initSegmentId","initSegment","segmentKeyId","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","dateTimeObject","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","results","findRange","TIME_FUDGE_FACTOR","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","stream","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","cueTime","frames","frame","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","win","window","TARGET","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","Uint8Array","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","Stream","init","pipe","destination","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","UINT32_MAX","avc1","avcC","btrt","dref","mdat","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","vmhd","charCodeAt","payload","DataView","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","flags","samples","dependsOn","isDependedOn","hasRedundancy","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","mp4Generator","fileType","movie","sampleForFrame","dataOffset","pts","dts","keyFrame","frameUtils","nalUnits","currentNal","currentFrame","nalCount","nalUnitType","currentGop","gops","baseDataOffset","nalsByteLength","numberOfNals","view","highPrefix","lowPrefix","zeroFill","count","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","timestamp","sampleRate","timelineStartPts","keepOriginalTimestamps","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ceil","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","array","sum","sumFrameByteLengths","ONE_SECOND_IN_TS$1","trackDecodeInfo","maxSegmentDts","maxSegmentPts","timelineStartInfo","captionPacketParser","payloadType","payloadSize","subarray","sei","userData","ccData","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","presortIndex","packet","dispatchCea608Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","handleRollover","reference","direction","TimestampRolloverStream","lastDTS","referenceDTS","type_","discontinuity","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","decodeURIComponent","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","unescape","tagSize","bufferSize","dispatchType","chunk","frameStart","frameSize","dataAlignmentIndicator","d","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","streamType","pid","processPes_","STREAM_TYPES","h264","adts","timedMetadata","stream$$1","forceFlush","packetFlushable","fragment","packetData","trackId","pes","ptsDtsFlags","packetLength","codec","flushStreams_","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES","handlePartialSegments","frameNum","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","getUint32","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","len","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","newLength","newData","emulationPreventionBytesPositions","sourceIndex","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","H264Stream","NalByteStream","header","byteIndex","returnSize","lowThree","middle","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","ONE_SECOND_IN_TS$3","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","generateVideoSegmentTimingInfo","startDts","endDts","prependedContentDuration","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","captionStreams","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","hasAudio","hasVideo","setupTsPipeline","packetStream","parseStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","MessageHandlers","transmuxer$$1","initArray","typedArray","action","gopInfo","videoSegmentTimingInfo","wireTransmuxerEvents","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","parseCodecs","codecCount","parsed","makeMimeTypeString","container","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","CODECS","getCodecs","isMuxed","isMaat","AUDIO","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","parseContentType","parameters","parameter","pair","isAudioCodec","isVideoCodec","gopsSafeToAlignWith","mapping","currentTimePts","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","timingInfo","timingInfoInSeconds","decode","presentation","mimeType","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","generateSidxKey","sidxInfo","sidxByteRangeEnd","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","sidx","savedSidxInfo","requestSidx_","sidxRange","finishProcessingFn","responseType","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","minimumUpdatePeriodTimeout_","mediaRequest_","doneFn","parseSidx","sidxMapping","sidxKey","sidxRequestFinished_","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","hasPendingRequest","masterXml","mediaGroupSidx","filterChangedSidxMappings","updatedMaster","mediaID","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","removing","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","disposeFn","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","didError","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","decrypted","keyBytes","Uint32Array","encrypted","iv","decryptSegment","handleProgress","progressFn","progressEvent","stats","loaded","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","isInitialized","timescales","timescale","videoTrackIds","handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","detectEndOfStream","segmentIndex","appendedLastSegment","finite","isFinite","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","triggerSyncInfoUpdate_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","storedKey","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","segmentInfo","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","clearAllCaptions","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","isEndOfStream_","endOfStream","timeline","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","currentTimeline","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","trimTime","maxTrimTime","safeBackBufferTrimTime","segmentKey","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","clearParsedCaptions","handleSegment_","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","segmentTimestampInfo","ptsStartTime","ptsTime","dtsStartTime","dtsTime","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","custom","dateTimeString","resolution","RESOLUTION","uint8ToUtf8","uintArray","escape","VTT_LINE_TERMINATORS","_char2","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","combinedByteLength","combinedSegment","skipEmptySegments_","timestampOffsetForTimeline","loadHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","inspect","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentStart","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","compositionStartTime","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","aesTables","AES","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","tEnc","tDec","precompute","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","_length","AsyncStream$$1","_Stream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter$$1","initVector","step","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","decipher","decrypted32","init0","init1","init2","init3","wordIx","decrypt$$1","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onError","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","SUBTITLES","setupListeners","requestOptions","initialize","_settings$mediaTypes$","groups","variantLabel","_settings$mediaTypes$2","forced","autoselect","_settings$mediaTypes$3","instreamId","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","mediaGroup","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","shouldSwitchToMedia","onSyncInfoUpdate_","onEndOfStream","isEndOfStream","getExpiredTime","absolutePlaylistEnd","audioSeekable","suggestedPresentationDelay","mainSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","cueOut","adOffset","adTotal","_segment$cueOutCont$s","cueOutCont","_segment$cueOutCont$s2","updateAdCues","Representation","hlsHandler","loader","playlistID","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","Hls$1","Decrypter","AsyncStream","STANDARD_PLAYLIST_SELECTOR","pixelRatio","useDevicePixelRatio","devicePixelRatio","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","audioSegmentLoader","sourceOptions","keySystemOptions","videoMimeType","audioMimeType","parsedMimeType","audioCodec","keySystemContentTypes","videoPlaylist","keySystem","audioContentType","videoContentType","contentProtection","pssh","emeKeySystems","source_","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","HlsHandler","vhs","dash","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","featuresNativeAudioTracks","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","option","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","representations","setupQualityLevels_","qualityLevels_","addQualityLevel","receiver","Function","getter","get$1","HlsSourceHandler","_videojs$mergeOptions","supportedType","canUseMsePlayback"],"mappings":"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","file":"d6e1aeb5-b51e2072a0430ec7a984.js","sourcesContent":["/**\n * @license\n * Video.js 7.8.4 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport '@babel/runtime/helpers/possibleConstructorReturn';\nimport '@babel/runtime/helpers/getPrototypeOf';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _construct from '@babel/runtime/helpers/construct';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4Inspector from 'mux.js/lib/tools/mp4-inspector';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport CaptionParser from 'mux.js/lib/mp4/caption-parser';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\nvar version = \"7.8.4\";\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args)); // only store 1000 history entries\n\n      var splice = history.length - 1000;\n      history.splice(0, splice > 0 ? splice : 0);\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n/**\n * @file log.js\n * @module log\n */\n\n\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\n\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return _extends.apply(void 0, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var computedStyleValue = window$1.getComputedStyle(el);\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n\n  return '';\n}\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\n\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val) {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\n\n\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\n\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n/**\n * @file guid.js\n * @module guid\n */\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\n\n\nvar _initialGuid = 3;\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\n\nvar _guid = _initialGuid;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n\nvar FakeWeakMap;\n\nif (!window$1.WeakMap) {\n  FakeWeakMap = /*#__PURE__*/function () {\n    function FakeWeakMap() {\n      this.vdata = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n      this.data = {};\n    }\n\n    var _proto = FakeWeakMap.prototype;\n\n    _proto.set = function set(key, value) {\n      var access = key[this.vdata] || newGUID();\n\n      if (!key[this.vdata]) {\n        key[this.vdata] = access;\n      }\n\n      this.data[access] = value;\n      return this;\n    };\n\n    _proto.get = function get(key) {\n      var access = key[this.vdata]; // we have data, return it\n\n      if (access) {\n        return this.data[access];\n      } // we don't have data, return nothing.\n      // return undefined explicitly as that's the contract for this method\n\n\n      log('We have no data for this element', key);\n      return undefined;\n    };\n\n    _proto.has = function has(key) {\n      var access = key[this.vdata];\n      return access in this.data;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var access = key[this.vdata];\n\n      if (access) {\n        delete this.data[access];\n        delete key[this.vdata];\n      }\n    };\n\n    return FakeWeakMap;\n  }();\n}\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar DomData = window$1.WeakMap ? new WeakMap() : new FakeWeakMap();\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData[\"delete\"](elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true; // Returns fixed-up instance\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\n\nvar _supportsPassive;\n\nvar supportsPassive = function supportsPassive() {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {// disregard\n    }\n  }\n\n  return _supportsPassive;\n};\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n\n  var data = DomData.get(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n\n    var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n/**\n * @file fn.js\n * @module fn\n */\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = fn.bind(context); // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this; // only set up EVENT_MAP if it'll be used\n\n\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this; // Support providing the `stateUpdates` state as a function.\n\n\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n/**\n * @file string-cases.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\n\n\nvar toLowerCase = function toLowerCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toLowerCase();\n  });\n};\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\n\nvar toTitleCase = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\n\nvar titleCaseEquals = function titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n};\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\n\nvar Component = /*#__PURE__*/function () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    this.isDisposed_ = false; // Hold the reference to the parent component via `addChild` method\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    var SetSham;\n\n    if (!window$1.Set) {\n      SetSham = /*#__PURE__*/function () {\n        function SetSham() {\n          this.set_ = {};\n        }\n\n        var _proto2 = SetSham.prototype;\n\n        _proto2.has = function has(key) {\n          return key in this.set_;\n        };\n\n        _proto2[\"delete\"] = function _delete(key) {\n          var has = this.has(key);\n          delete this.set_[key];\n          return has;\n        };\n\n        _proto2.add = function add(key) {\n          this.set_[key] = 1;\n          return this;\n        };\n\n        _proto2.forEach = function forEach(callback, thisArg) {\n          for (var key in this.set_) {\n            callback.call(thisArg, key, key, this);\n          }\n        };\n\n        return SetSham;\n      }();\n    }\n\n    this.setTimeoutIds_ = window$1.Set ? new Set() : new SetSham();\n    this.setIntervalIds_ = window$1.Set ? new Set() : new SetSham();\n    this.rafIds_ = window$1.Set ? new Set() : new SetSham();\n    this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n\n\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true; // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      if (DomData.has(this.el_)) {\n        DomData[\"delete\"](this.el_);\n      }\n\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  ;\n\n  _proto.isDisposed = function isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  ;\n\n  _proto.getDescendant = function getDescendant() {\n    for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {\n      names[_key] = arguments[_key];\n    } // flatten array argument into the main array\n\n\n    names = names.reduce(function (acc, n) {\n      return acc.concat(n);\n    }, []);\n    var currentChild = this;\n\n    for (var i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n\n    return currentChild;\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      var refNode = null;\n\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this; // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n\n\n    var timeoutId;\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(function () {\n      if (_this2.setTimeoutIds_.has(timeoutId)) {\n        _this2.setTimeoutIds_[\"delete\"](timeoutId);\n      }\n\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_[\"delete\"](timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    var intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_[\"delete\"](intervalId);\n      window$1.clearInterval(intervalId);\n    }\n\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this3 = this; // Fall back to using a timer.\n\n\n    if (!this.supportsRaf_) {\n      return this.setTimeout(fn, 1000 / 60);\n    }\n\n    this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n    var id;\n    fn = bind(this, fn);\n    id = window$1.requestAnimationFrame(function () {\n      if (_this3.rafIds_.has(id)) {\n        _this3.rafIds_[\"delete\"](id);\n      }\n\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.clearTimeout(id);\n    }\n\n    if (this.rafIds_.has(id)) {\n      this.rafIds_[\"delete\"](id);\n      window$1.cancelAnimationFrame(id);\n    }\n\n    return id;\n  }\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  ;\n\n  _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n    var _this4 = this;\n\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', function () {\n      [['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n        var idName = _ref[0],\n            cancelName = _ref[1];\n\n        _this4[idName].forEach(_this4[cancelName], _this4);\n      });\n      _this4.clearingTimersOnDispose_ = false;\n    });\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    Component.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name || !Component.components_) {\n      return;\n    }\n\n    return Component.components_[name];\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edg/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  IS_IPOD: IS_IPOD,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\n\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\n\n\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\n\n\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n\n\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n\n\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n\n\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n\n\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\n\nvar TextTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\n\nvar HtmlTrackElementList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\n\nvar TextTrackCueList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\n\n\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n\n\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\n\nvar isCrossOrigin = function isCrossOrigin(url, winLoc) {\n  if (winLoc === void 0) {\n    winLoc = window$1.location;\n  }\n\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n          if (event.type === 'vttjserror') {\n            log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n            return;\n          }\n\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    _this.preload_ = _this.tech_.preloadTextTracks !== false;\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n\n      if (!_this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        _this.loaded_ = true;\n      }\n\n      if (_this.preload_ || default_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(_this.src, _assertThisInitialized(_this));\n      }\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n\n\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\n\nvar VideoTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n\n\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = _extends({}, NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Tech, _Component);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    } // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n\n\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.preloadTextTracks = options.preloadTextTracks !== false;\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    name = toTitleCase(name);\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n/**\n * @file middleware.js\n * @module middleware\n */\n\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  if (!src.type) {\n    var mimetype = getMimetype(src.src);\n\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n\n  return src;\n}\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\n\nvar MediaLoader = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n\n\n  function MediaLoader(player, options, ready) {\n    var _this; // MediaLoader has no element\n\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   */\n\n\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off('mouseover', this.handleMouseOver);\n    this.off('mouseout', this.handleMouseOut);\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n\n    if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n    // calling .focus() on the video element causes the video to go black,\n    // so we avoid it in that specific case\n    !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n\n\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_this), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_this), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_this), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n      // calling .focus() on the video element causes the video to go black,\n      // so we avoid it in that specific case\n      !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n\n\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\n\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\n\nvar TimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['timeupdate', 'ended'], _this.updateContent);\n\n    _this.updateTextNode_();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_(time) {\n    var _this2 = this;\n\n    if (time === void 0) {\n      time = 0;\n    }\n\n    time = formatTime(time);\n\n    if (this.formattedTime_ === time) {\n      return;\n    }\n\n    this.formattedTime_ = time;\n    this.requestAnimationFrame(function () {\n      if (!_this2.contentEl_) {\n        return;\n      }\n\n      var oldNode = _this2.textNode_;\n      _this2.textNode_ = document.createTextNode(_this2.formattedTime_);\n\n      if (!_this2.textNode_) {\n        return;\n      }\n\n      if (oldNode) {\n        _this2.contentEl_.replaceChild(_this2.textNode_, oldNode);\n      } else {\n        _this2.contentEl_.appendChild(_this2.textNode_);\n      }\n    });\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  function CurrentTimeDisplay() {\n    return _TimeDisplay.apply(this, arguments) || this;\n  }\n\n  var _proto = CurrentTimeDisplay.prototype;\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time;\n\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.updateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n\n    var time; // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\n\nvar clamp = function clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n};\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\n\nvar Slider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Slider, _Component);\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n\n\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick); // TODO: deprecated, controlsvisible does not seem to be fired\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    } // Add the slider element class to all sub classes\n\n\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    var _this2 = this; // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n\n\n    if (!this.el_ || !this.bar) {\n      return;\n    } // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n\n\n    var progress = this.getProgress();\n\n    if (progress === this.progress_) {\n      return progress;\n    }\n\n    this.progress_ = progress;\n    this.requestAnimationFrame(function () {\n      // Set the new bar width or height\n      var sizeKey = _this2.vertical() ? 'height' : 'width'; // Convert to a percentage for css value\n\n      _this2.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  ;\n\n  _proto.getProgress = function getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\nvar percentify = function percentify(time, end) {\n  return clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n};\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\n\nvar LoadProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress'\n    });\n\n    var wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    var loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    var separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this2 = this;\n\n    this.requestAnimationFrame(function () {\n      var liveTracker = _this2.player_.liveTracker;\n\n      var buffered = _this2.player_.buffered();\n\n      var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : _this2.player_.duration();\n\n      var bufferedEnd = _this2.player_.bufferedEnd();\n\n      var children = _this2.partEls_;\n      var percent = percentify(bufferedEnd, duration);\n\n      if (_this2.percent_ !== percent) {\n        // update the width of the progress bar\n        _this2.el_.style.width = percent; // update the control-text\n\n        textContent(_this2.percentageEl_, percent);\n        _this2.percent_ = percent;\n      } // add child elements to represent the individual buffered time ranges\n\n\n      for (var i = 0; i < buffered.length; i++) {\n        var start = buffered.start(i);\n        var end = buffered.end(i);\n        var part = children[i];\n\n        if (!part) {\n          part = _this2.el_.appendChild(createEl());\n          children[i] = part;\n        } //  only update if changed\n\n\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n\n        part.dataset.start = start;\n        part.dataset.end = end; // set the percent based on the width of the progress bar (bufferedEnd)\n\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      } // remove unused buffered range elements\n\n\n      for (var _i = children.length; _i > buffered.length; _i--) {\n        _this2.el_.removeChild(children[_i - 1]);\n      }\n\n      children.length = buffered.length;\n    });\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TimeTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this2 = this; // If there is an existing rAF ID, cancel it so we don't over-queue.\n\n\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this2.player_.duration();\n\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n        var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this2.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlayProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlayProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update_ = bind(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.update();\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n\n    if (!this.updateInterval) {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this2 = this;\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.requestAnimationFrame(function () {\n      var currentTime = _this2.player_.ended() ? _this2.player_.duration() : _this2.getCurrentTime_();\n      var liveTracker = _this2.player_.liveTracker;\n\n      var duration = _this2.player_.duration();\n\n      if (liveTracker && liveTracker.isLive()) {\n        duration = _this2.player_.liveTracker.liveCurrentTime();\n      }\n\n      if (_this2.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        _this2.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n        _this2.percent_ = percent;\n      }\n\n      if (_this2.currentTime_ !== currentTime || _this2.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        _this2.el_.setAttribute('aria-valuetext', _this2.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n        _this2.currentTime_ = currentTime;\n        _this2.duration_ = duration;\n      } // update the progress bar time tooltip with the current time\n\n\n      if (_this2.bar) {\n        _this2.bar.update(getBoundingClientRect(_this2.el()), _this2.getProgress());\n      }\n    });\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    this.off(this.player_, ['playing'], this.enableInterval_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n\n    _Slider.prototype.dispose.call(this);\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (!seekBar) {\n      return;\n    }\n\n    var playProgressBar = seekBar.getChild('playProgressBar');\n    var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n\n    var seekBarEl = seekBar.el();\n    var seekBarRect = getBoundingClientRect(seekBarEl);\n    var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n\n    seekBarPoint = clamp(0, 1, seekBarPoint);\n\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n\n\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], _this.handlePictureInPictureChange); // TODO: Activate button on player loadedmetadata event.\n    // TODO: Deactivate button on player emptied event.\n    // TODO: Deactivate button if disablepictureinpicture attribute is present.\n\n\n    if (!document.pictureInPictureEnabled) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\n\nvar VolumeLevel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\n\nvar MuteToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    _this.on(_this.muteToggle, 'keyup', _this.handleKeyPress);\n\n    _this.on(_this.volumeControl, 'keyup', _this.handleVolumeControlKeyUp);\n\n    _this.on('keydown', _this.handleKeyPress);\n\n    _this.on('mouseover', _this.handleMouseOver);\n\n    _this.on('mouseout', _this.handleMouseOut); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseOut();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  ;\n\n  _proto.handleMouseOver = function handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  ;\n\n  _proto.handleMouseOut = function handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Menu, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n\n\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_this), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_this), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.addClass('vjs-hover');\n\n      _this.menu.show();\n\n      on(document, 'keyup', bind(_assertThisInitialized(_this), _this.handleMenuKeyUp));\n    });\n\n    _this.on('mouseleave', _this.handleMouseLeave);\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseLeave();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  ;\n\n  _proto.handleMouseLeave = function handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleMenuKeyUp));\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\n\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n\n\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    } // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n\n\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n\n\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    } // if there's only one audio track, there no point in showing it\n\n\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = /*#__PURE__*/function (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\n\nComponent.registerComponent('ControlBar', ControlBar);\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = _extends({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_this), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n\n\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\nvar defaults = {\n  trackingThreshold: 30,\n  liveTolerance: 15\n};\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\n\nvar LiveTracker = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=30]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect wether we are live or not.\n   */\n\n\n  function LiveTracker(player, options) {\n    var _this; // LiveTracker does not need an element\n\n\n    var options_ = mergeOptions(defaults, options, {\n      createEl: false\n    });\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n  /**\n   * toggle tracking based on document visiblility\n   */\n\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  }\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newTime = Number(window$1.performance.now().toFixed(4));\n    var deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime(); // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n\n    var isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance; // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android\n\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLive_);\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked);\n    }\n  }\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  ;\n\n  _proto.handleFirstTimeupdate = function handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked);\n  }\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked() {\n    var timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.skipNextSeeked_ ? false : timeDiff > 2;\n    this.skipNextSeeked_ = false;\n    this.trackLive_();\n  }\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.skipNextSeeked_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLive_);\n    this.off(this.player_, 'seeked', this.handleSeeked);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Wether liveTracker is tracking\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Wether playback is at the live edge\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * The number of seconds that have occured after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    var seekableEnd = this.seekableEnd();\n\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n  /**\n   * Wether live tracker is currently tracking or not.\n   */\n  ;\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n\n    if (this.atLiveEdge()) {\n      return;\n    } // skipNextSeeked_\n\n\n    this.skipNextSeeked_ = true;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n  /**\n   * Dispose of liveTracker\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.off(document, 'visibilitychange', this.handleVisibilityChange);\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter wether a setter shoould be allowed or not\n */\n\n\nvar defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n  if (setter === void 0) {\n    setter = true;\n  }\n\n  var set = function set(value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      writable: true\n    });\n  };\n\n  var options = {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var value = getValue();\n      set(value);\n      return value;\n    }\n  };\n\n  if (setter) {\n    options.set = set;\n  }\n\n  return Object.defineProperty(obj, key, options);\n};\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\n\nvar Html5 = /*#__PURE__*/function (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this; // If there is no behavioral change don't add/remove listeners\n\n\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        var event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event); // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n\n        if (name === 'text') {\n          _this3[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this; // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n\n\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play()); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\n\n\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n\n  var video = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\n[['featuresVolumeControl', 'canControlVolume'], ['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function (_ref) {\n  var key = _ref[0],\n      fn = _ref[1];\n  defineLazyProperty(Html5.prototype, key, function () {\n    return Html5[fn]();\n  }, true);\n});\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true; // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  if (canPlayType) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  }\n\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight, crossOrigin\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate, setCrossOrigin\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5); // on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Player, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n\n\n  function Player(tag, options, ready) {\n    var _this; // Make sure tag ID exists\n\n\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_this), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_this), _this.fullWindowOnEscKey); // default isFullscreen_ to false\n\n    _this.isFullscreen_ = false; // create logger\n\n    _this.log = createLogger$1(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    }); // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n\n    if (_this.fsApi_.requestFullscreen) {\n      on(document, _this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n\n      _this.on(_this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n    }\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        try {\n          tag[k] = el[k];\n        } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.crossOrigin = function crossOrigin(value) {\n    if (!value) {\n      return this.techGet_('crossOrigin');\n    }\n\n    if (value !== 'anonymous' && value !== 'use-credentials') {\n      log.warn(\"crossOrigin must be \\\"anonymous\\\" or \\\"use-credentials\\\", given \\\"\" + value + \"\\\"\");\n      return;\n    }\n\n    this.techCall_('setCrossOrigin', value);\n    return;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this; // Pause and remove current playback technology\n\n\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'fullscreenerror', this.handleTechFullscreenError_);\n    this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n    this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this; // Save the current text tracks so that we can reuse the same text tracks with the next tech\n\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this; // only update the source cache when the source\n    // was not updated using the player api\n\n\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], function (e) {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n\n          var techSrc = _this6.techGet('currentSrc');\n\n          _this6.lastSource_.tech = techSrc;\n\n          _this6.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var targetPlayer = e.target.player; // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs);\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.toggleClass('vjs-ios-native-fs');\n      }\n\n      this.isFullscreen(data.isFullscreen);\n    }\n  };\n\n  _proto.handleTechFullscreenError_ = function handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n        this.cache_.initTime = seconds;\n        this.off('canplay', this.applyInitTime_);\n        this.one('canplay', this.applyInitTime_);\n        return;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      this.cache_.initTime = 0;\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  ;\n\n  _proto.applyInitTime_ = function applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      var oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS); // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {EventTarget~Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      var self = this;\n      return new PromiseClass(function (resolve, reject) {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        var promise = self.requestFullscreenHelper_(fullscreenOptions);\n\n        if (promise) {\n          promise.then(offHandler, offHandler);\n          return promise;\n        }\n      });\n    }\n\n    return this.requestFullscreenHelper_();\n  };\n\n  _proto.requestFullscreenHelper_ = function requestFullscreenHelper_(fullscreenOptions) {\n    var _this10 = this;\n\n    var fsOptions; // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    } // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      if (promise) {\n        promise.then(function () {\n          return _this10.isFullscreen(true);\n        }, function () {\n          return _this10.isFullscreen(false);\n        });\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      var self = this;\n      return new PromiseClass(function (resolve, reject) {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        var promise = self.exitFullscreenHelper_();\n\n        if (promise) {\n          promise.then(offHandler, offHandler);\n          return promise;\n        }\n      });\n    }\n\n    return this.exitFullscreenHelper_();\n  };\n\n  _proto.exitFullscreenHelper_ = function exitFullscreenHelper_() {\n    var _this11 = this;\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = document[this.fsApi_.exitFullscreen]();\n\n      if (promise) {\n        promise.then(function () {\n          return _this11.isFullscreen(false);\n        });\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n      if (el.isContentEditable) {\n        return true;\n      } // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      } // The final test is by tag name. These tags will be excluded entirely.\n\n\n      var excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this12 = this; // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n\n\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1]; // Check if the current tech is defined before continuing\n\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this12.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this13 = this; // getter usage\n\n\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this13.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this13.cache_.sources = sources;\n\n      _this13.updateSourceCaches_(middlewareSource);\n\n      var err = _this13.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this13.src(sources.slice(1));\n        }\n\n        _this13.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this13.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this13.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this13.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this14 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this14.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this15 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this15.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUpAndMouseLeave = function handleMouseUpAndMouseLeave(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   * When manualCleanup is set to false, the track will be automatically removed\n   * on source changes.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *                                       removed on a source change\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this16 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this16.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this17 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this17.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\n\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // this is needed for backward-compatibility and node compatibility.\n\n\n  if (superClass) {\n    subClass.super_ = superClass;\n  } // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = XHR;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\nvideojs$1.defineLazyProperty = defineLazyProperty;\n/**\n * @videojs/http-streaming\n * @version 1.13.2\n * @copyright 2020 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.id];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === media.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar createPlaylistID = function createPlaylistID(index, uri) {\n  return index + '-' + uri;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = createPlaylistID(i, playlist.uri);\n    master.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    master.playlists[playlist.uri] = playlist;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media(), 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri, _this.media().id);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, playlist, startingState) {\n      var uri = playlist.uri,\n          id = playlist.id; // any in-flight request is now finished\n\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[id],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + uri + '.',\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url, id) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url;\n      parser.manifest.id = id; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[id];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.finalRenditionTimeout);\n      this.off();\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @param {Boolean=} is this the last available playlist\n     *\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist, isFinalRendition) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window$1.clearTimeout(this.finalRenditionTimeout);\n\n      if (isFinalRendition) {\n        var delay = playlist.targetDuration / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.id].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri, playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl + '.',\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        }\n\n        var id = createPlaylistID(0, _this5.srcUrl); // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: id,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[id] = _this5.master.playlists[0]; // URI reference added for backwards compatibility\n\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl, id);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * A liveEdgePadding can be provided which will be used instead of calculating the safe live edge.\n * This corresponds to suggestedPresentationDelay in DASH manifests.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @param {Number} [liveEdgePadding]\n *        A number in seconds indicating how far from the end we want to be.\n *        If provided, this value is used instead of calculating the safe live index from the target durations.\n *        Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist, liveEdgePadding) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length;\n  var lastSegmentDuration = playlist.segments[i - 1].duration || playlist.targetDuration;\n  var safeDistance = typeof liveEdgePadding === 'number' ? liveEdgePadding : lastSegmentDuration + playlist.targetDuration * 2;\n\n  if (safeDistance === 0) {\n    return i;\n  }\n\n  var distanceFromEnd = 0;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {Number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist, liveEdgePadding) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired, liveEdgePadding) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      this.on('partialdone', function (flushSource) {\n        destination.partialFlush(flushSource);\n      });\n      this.on('endedtimeline', function (flushSource) {\n        destination.endTimeline(flushSource);\n      });\n      this.on('reset', function (flushSource) {\n        destination.reset(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    Stream.prototype.partialFlush = function (flushSource) {\n      this.trigger('partialdone', flushSource);\n    };\n\n    Stream.prototype.endTimeline = function (flushSource) {\n      this.trigger('endedtimeline', flushSource);\n    };\n\n    Stream.prototype.reset = function (flushSource) {\n      this.trigger('reset', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i,\n            avc1Box; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length], // numOfSequenceParameterSets\n        sequenceParameterSets, // \"SPS\"\n        [pps.length], // numOfPictureParameterSets\n        pictureParameterSets // \"PPS\"\n        ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n        ]))];\n\n        if (track.sarRatio) {\n          var hSpacing = track.sarRatio[0],\n              vSpacing = track.sarRatio[1];\n          avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n        }\n\n        return box.apply(null, avc1Box);\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = []; // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength = 0;\n      frames.nalCount = 0;\n      frames.duration = 0;\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n            frames.byteLength += currentFrame.byteLength;\n            frames.nalCount += currentFrame.length;\n            frames.duration += currentFrame.duration;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n      // TODO added for LHLS, make sure this is OK\n\n\n      frames.byteLength += currentFrame.byteLength;\n      frames.nalCount += currentFrame.length;\n      frames.duration += currentFrame.duration;\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    }; // generate the track's sample table from a frame\n\n\n    var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n      var sample,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n      sample = sampleForFrame(frame, dataOffset);\n      samples.push(sample);\n      return samples;\n    }; // generate the track's raw mdat data from a frame\n\n\n    var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n      var i,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = frame.byteLength,\n          numberOfNals = frame.length,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each NAL..\n\n      for (i = 0; i < frame.length; i++) {\n        currentNal = frame[i];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData,\n      generateSampleTableForFrame: generateSampleTableForFrame,\n      concatenateNalDataForFrame: concatenateNalDataForFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs,\n        metadataTsToSeconds;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n    /**\n     * Adjust ID3 tag or caption timing information by the timeline pts values\n     * (if keepOriginalTimestamps is false) and convert to seconds\n     */\n\n\n    metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n      return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n    };\n\n    var clock = {\n      ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs,\n      metadataTsToSeconds: metadataTsToSeconds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i,\n          firstFrame;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        firstFrame = frames[0];\n        frames.splice(0, 0, {\n          data: silentFrame,\n          dts: firstFrame.dts - frameDuration,\n          pts: firstFrame.pts - frameDuration\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS;\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flushCCStreams = function (flushType) {\n      this.ccStreams_.forEach(function (cc) {\n        return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n      }, this);\n    };\n\n    CaptionStream.prototype.flushStream = function (flushType) {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.flushCCStreams(flushType);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.flushCCStreams(flushType);\n    };\n\n    CaptionStream.prototype.flush = function () {\n      return this.flushStream('flush');\n    }; // Only called if handling partial data\n\n\n    CaptionStream.prototype.partialFlush = function () {\n      return this.flushStream('partialFlush');\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n    var TYPE_SHARED = 'shared';\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n      // video and audio. We could use `undefined` here, but having a string\n      // makes debugging a little clearer.\n\n      this.type_ = type || TYPE_SHARED;\n\n      this.push = function (data) {\n        // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n        // streams will only accept data that matches their type.\n        if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n\n      this.reset = function () {\n        this.discontinuity();\n        this.trigger('reset');\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.reset = function () {\n        bytesInBuffer = 0;\n        this.trigger('reset');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          programMapTable,\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            };\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      this.reset = function () {\n        video.size = 0;\n        video.data.length = 0;\n        audio.size = 0;\n        audio.data.length = 0;\n        this.trigger('reset');\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flushStreams_ = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n      };\n\n      this.flush = function () {\n        this.flushStreams_();\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n    var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream(handlePartialSegments) {\n      var buffer,\n          frameNum = 0;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (!handlePartialSegments) {\n          frameNum = 0;\n        }\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Look for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n          frameNum++; // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          } // Remove the finished frame from the buffer and start the process again\n\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        frameNum = 0;\n        this.trigger('done');\n      };\n\n      this.reset = function () {\n        buffer = void 0;\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        buffer = void 0;\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n        for (; syncPoint < len - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < len) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < len);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.reset = function () {\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('reset');\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n      nalByteStream.on('partialdone', function () {\n        self.trigger('partialdone');\n      });\n      nalByteStream.on('reset', function () {\n        self.trigger('reset');\n      });\n      nalByteStream.on('endedtimeline', function () {\n        self.trigger('endedtimeline');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      this.partialFlush = function () {\n        nalByteStream.partialFlush();\n      };\n\n      this.reset = function () {\n        nalByteStream.reset();\n      };\n\n      this.endTimeline = function () {\n        nalByteStream.endTimeline();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n          sarRatio: sarRatio\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n\n      this.reset = function () {\n        everything = new Uint8Array();\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        everything = new Uint8Array();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData;\n    var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes, frameDuration; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$3 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n        // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n        // valid use-case where an init segment/data should be triggered without associated\n        // frames. Leaving for now, but should be looked into.\n\n        if (frames.length) {\n          this.trigger('timingInfo', {\n            start: frames[0].pts,\n            end: frames[0].pts + frames.length * frameDuration\n          });\n        }\n\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      this.reset = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n        adtsFrames = [];\n        this.trigger('reset');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n        this.trigger('timingInfo', {\n          start: gops[0].pts,\n          end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n        }); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.reset = function () {\n        this.resetStream_();\n        nalUnits = [];\n        this.gopCache_.length = 0;\n        gopsToAlignWith.length = 0;\n        this.trigger('reset');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      } else {\n        this.keepOriginalTimestamps = false;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n        // We unshift audio and push video because\n        // as of Chrome 75 when switching from\n        // one init segment to another if the video\n        // mdat does not appear after the audio mdat\n        // only audio will play for the duration of our transmux.\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n          this.pendingBoxes.push(output.boxes);\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n          this.pendingBoxes.unshift(output.boxes);\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.videoTrack || this.audioTrack) {\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n          caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n        // We include captions and ID3 tags for backwards compatibility,\n        // ideally we should send only video and audio in the data event\n\n        this.trigger('data', event); // Emit each caption to the outside world\n        // Ideally, this would happen immediately on parsing captions,\n        // but we need to ensure that video data is sent back first\n        // so that caption timing can be adjusted to match video timing\n\n        for (i = 0; i < event.captions.length; i++) {\n          caption = event.captions[i];\n          this.trigger('caption', caption);\n        } // Emit each id3 tag to the outside world\n        // Ideally, this would happen immediately on parsing the tag,\n        // but we need to ensure that video data is sent back first\n        // so that ID3 frame timing can be adjusted to match video timing\n\n\n        for (i = 0; i < event.metadata.length; i++) {\n          id3 = event.metadata[i];\n          this.trigger('id3Frame', id3);\n        }\n      } // Only emit `done` if all tracks have been flushed and emitted\n\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n\n    _CoalesceStream.prototype.setRemux = function (val) {\n      this.remuxTracks = val;\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n        pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n        pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n              pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            } // emit pmt info\n\n\n            self.trigger('trackinfo', {\n              hasAudio: !!audioTrack,\n              hasVideo: !!videoTrack\n            });\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n          id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n          self.trigger('id3Frame', id3Frame);\n        });\n        pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timestampRolloverStream) {\n          pipeline.timestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.setRemux = function (val) {\n        var pipeline = this.transmuxPipeline_;\n        options.remux = val;\n\n        if (pipeline && pipeline.coalesceStream) {\n          pipeline.coalesceStream.setRemux(val);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      this.endTimeline = function () {\n        this.transmuxPipeline_.headOfPipeline.endTimeline();\n      };\n\n      this.reset = function () {\n        if (this.transmuxPipeline_.headOfPipeline) {\n          this.transmuxPipeline_.headOfPipeline.reset();\n        }\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer$$1) {\n      transmuxer$$1.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer$$1.captionStream) {\n        transmuxer$$1.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer$$1.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer$$1.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer$$1.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new transmuxer.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType[\"default\"] && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type is updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      if (!this.pendingBuffers_.length) {\n        // We are no longer in the internal \"updating\" state\n        this.trigger('updateend');\n        this.bufferUpdating_ = false;\n        return;\n      } // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.transmuxer_) {\n        this.transmuxer_.terminate();\n      }\n\n      this.trigger('dispose');\n      this.off();\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.off();\n      this.sourceBuffers.forEach(function (buffer) {\n        if (buffer.dispose) {\n          buffer.dispose();\n        }\n      });\n      this.sourceBuffers.length = 0;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var id = properties.playlists[0].id;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar generateSidxKey = function generateSidxKey(sidxInfo) {\n  // should be non-inclusive\n  var sidxByteRangeEnd = sidxInfo.byterange.offset + sidxInfo.byterange.length - 1;\n  return sidxInfo.uri + '-' + sidxInfo.byterange.offset + '-' + sidxByteRangeEnd;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var id in playlists) {\n    var playlist = playlists[id];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} masterXml the mpd XML\n *  @param {string} srcUrl the mpd url\n *  @param {Date} clientOffset a time difference between server and client (passed through and not used)\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(masterXml, srcUrl, clientOffset, oldSidxMapping) {\n  // Don't pass current sidx mapping\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset\n  });\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions$2(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n}; // exported for testing\n\n\nvar requestSidx_ = function requestSidx_(sidxRange, playlist, xhr, options, finishProcessingFn) {\n  var sidxInfo = {\n    // resolve the segment URL relative to the playlist\n    uri: resolveManifestRedirect(options.handleManifestRedirects, sidxRange.resolvedUri),\n    // resolvedUri: sidxRange.resolvedUri,\n    byterange: sidxRange.byterange,\n    // the segment's playlist\n    playlist: playlist\n  };\n  var sidxRequestOptions = videojs$1.mergeOptions(sidxInfo, {\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(sidxInfo)\n  });\n  return xhr(sidxRequestOptions, finishProcessingFn);\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().id);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.sidxMapping_ = {};\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window$1.clearTimeout(this.mediaRequest_);\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.off();\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'sidxRequestFinished_',\n    value: function sidxRequestFinished_(playlist, master, startingState, doneFn) {\n      var _this2 = this;\n\n      return function (err, request) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        } // pending request is cleared\n\n\n        _this2.request = null;\n\n        if (err) {\n          _this2.error = {\n            status: request.status,\n            message: 'DASH playlist request error at URL: ' + playlist.uri,\n            response: request.response,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (startingState) {\n            _this2.state = startingState;\n          }\n\n          _this2.trigger('error');\n\n          return doneFn(master, null);\n        }\n\n        var bytes = new Uint8Array(request.response);\n        var sidx = mp4Inspector.parseSidx(bytes.subarray(8));\n        return doneFn(master, sidx);\n      };\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      if (!playlist.sidx) {\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0); // exit early and don't do sidx work\n\n        return;\n      } // we have sidx mappings\n\n\n      var oldMaster = void 0;\n      var sidxMapping = void 0; // sidxMapping is used when parsing the masterXml, so store\n      // it on the masterPlaylistLoader\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        sidxMapping = this.masterPlaylistLoader_.sidxMapping_;\n      } else {\n        oldMaster = this.master;\n        sidxMapping = this.sidxMapping_;\n      }\n\n      var sidxKey = generateSidxKey(playlist.sidx);\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx\n      };\n      this.request = requestSidx_(playlist.sidx, playlist, this.hls_.xhr, {\n        handleManifestRedirects: this.handleManifestRedirects\n      }, this.sidxRequestFinished_(playlist, oldMaster, startingState, function (newMaster, sidx) {\n        if (!newMaster || !sidx) {\n          throw new Error('failed to request sidx');\n        } // update loader's sidxMapping with parsed sidx box\n\n\n        sidxMapping[sidxKey].sidx = sidx; // everything is ready just continue to haveMetadata\n\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: newMaster.playlists[playlist.id]\n        });\n      }));\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.id] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_,\n        sidxMapping: this.sidxMapping_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri;\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          var id = createPlaylistID(0, _phonyUri);\n          properties.playlists[0].uri = _phonyUri;\n          properties.playlists[0].id = id; // setup ID and URI references (URI for backwards compatibility)\n\n          master.playlists[id] = properties.playlists[0];\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this5.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this5.masterLoaded_ = Date.now();\n        }\n\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n\n        _this5.syncClientServerClock_(_this5.onClientServerClockSync_.bind(_this5));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this6 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this6.clientOffset_ = _this6.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this6.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this6.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this7 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        this.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this7.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this8 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this8.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this8.request = null;\n\n        if (error) {\n          _this8.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this8.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this8.state === 'HAVE_NOTHING') {\n            _this8.started = false;\n          }\n\n          return _this8.trigger('error');\n        }\n\n        _this8.masterXml_ = req.responseText; // This will filter out updated sidx info from the mapping\n\n        _this8.sidxMapping_ = filterChangedSidxMappings(_this8.masterXml_, _this8.srcUrl, _this8.clientOffset_, _this8.sidxMapping_);\n\n        var master = _this8.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this8.master, master);\n\n        var currentSidxInfo = _this8.media().sidx;\n\n        if (updatedMaster) {\n          if (currentSidxInfo) {\n            var sidxKey = generateSidxKey(currentSidxInfo); // the sidx was updated, so the previous mapping was removed\n\n            if (!_this8.sidxMapping_[sidxKey]) {\n              var playlist = _this8.media();\n\n              _this8.request = requestSidx_(playlist.sidx, playlist, _this8.hls_.xhr, {\n                handleManifestRedirects: _this8.handleManifestRedirects\n              }, _this8.sidxRequestFinished_(playlist, master, _this8.state, function (newMaster, sidx) {\n                if (!newMaster || !sidx) {\n                  throw new Error('failed to request sidx on minimumUpdatePeriod');\n                } // update loader's sidxMapping with parsed sidx box\n\n\n                _this8.sidxMapping_[sidxKey].sidx = sidx;\n                _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n                  _this8.trigger('minimumUpdatePeriod');\n                }, _this8.master.minimumUpdatePeriod); // TODO: do we need to reload the current playlist?\n\n                _this8.refreshMedia_(_this8.media().id);\n\n                return;\n              }));\n            }\n          } else {\n            _this8.master = updatedMaster;\n          }\n        }\n\n        _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this8.trigger('minimumUpdatePeriod');\n        }, _this8.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_(mediaID) {\n      var _this9 = this;\n\n      if (!mediaID) {\n        throw new Error('refreshMedia_ must take a media id');\n      }\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[mediaID];\n      } else {\n        this.media_ = newMaster.playlists[mediaID];\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n        _this2.sourceBuffer_.removing = false;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.removing = true;\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n\n          _this6.runCallback_();\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      var disposeFn = function disposeFn() {\n        if (_this7.sourceBuffer_ && _this7.mediaSource.readyState === 'open') {\n          _this7.sourceBuffer_.abort();\n        }\n\n        _this7.sourceBuffer_.removeEventListener('updateend', disposeFn);\n      };\n\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_.removing) {\n        this.sourceBuffer_.addEventListener('updateend', disposeFn);\n      } else {\n        disposeFn();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (captionParser && !captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (captionParser && segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n  var keyBytes = void 0;\n\n  if (segment.key.bytes.slice) {\n    keyBytes = segment.key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(segment.key.bytes));\n  } // this is an encrypted segment\n  // incrementally decrypt the segment\n\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: keyBytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {Number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  var pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  var trimTime = currentTime - 30;\n\n  if (seekable$$1.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable$$1.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n\n  var maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {}; // Fmp4 CaptionParser\n\n    if (_this.loaderType_ === 'main') {\n      _this.captionParser_ = new CaptionParser();\n    } else {\n      _this.captionParser_ = null;\n    }\n\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.triggerSyncInfoUpdate_ = function () {\n      return _this.trigger('syncinfoupdate');\n    };\n\n    _this.syncController_.on('syncinfoupdate', _this.triggerSyncInfoUpdate_);\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n\n      if (this.captionParser_) {\n        this.captionParser_.reset();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n        this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n      }\n\n      this.off();\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {Boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n  }, {\n    key: 'segmentKey',\n    value: function segmentKey(key) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set$$1 && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      //\n      // Use the INIT state to determine if playback has started, as the playlist sync info\n      // should be fixed once requests begin (as sync points are generated based on sync\n      // info), but not before then.\n\n      if (this.state === 'INIT') {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n      // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n      // we then clamp the value to duration if necessary.\n\n      this.remove(0, Infinity, done); // clears fmp4 captions\n\n      if (this.captionParser_) {\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      // clamp end to duration if we need to remove everything.\n      // This is due to a browser bug that causes issues if we remove to Infinity.\n      // videojs/videojs-contrib-hls#1225\n      if (end === Infinity) {\n        end = this.duration_();\n      }\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      // Previously, we changed the timestampOffset if the start of this segment\n      // is less than the currently set timestampOffset but this isn't wanted\n      // as it can produce bad behavior, especially around long running\n      // live streams\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\n        if (this.captionParser_) {\n          this.captionParser_.clearAllCaptions();\n        }\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n        startOfSegment = lastBufferedEnd;\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        if (this.captionParser_) {\n          this.captionParser_.clearParsedCaptions();\n        }\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        // Subtract any difference between the PTS and DTS times of the first frame\n        // from the timeStampOffset (which currently equals the buffered.end) to prevent\n        // creating any gaps in the buffer\n        if (timingInfo && timingInfo.segmentTimestampInfo) {\n          var ptsStartTime = timingInfo.segmentTimestampInfo[0].ptsTime;\n          var dtsStartTime = timingInfo.segmentTimestampInfo[0].dtsTime;\n          segmentInfo.timestampOffset -= ptsStartTime - dtsStartTime;\n        }\n\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.id,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    _this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = void 0;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(_this3.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 segment to determine the start of the segment\n     * in it's internal \"composition time\", which is equal to the base\n     * media decode time plus the composition time offset value\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"composition time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment; // get timescales from init segment\n\n      var timescales = mp4probe.timescale(segment.map.bytes); // calculate composition start time using the timescales and information\n      // contained within the media segment\n\n      var compositionStartTime = mp4probe.compositionStartTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= compositionStartTime;\n      }\n\n      return {\n        start: compositionStartTime,\n        end: compositionStartTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n      var segmentTimestampInfo = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n        segmentTimestampInfo = timeInfo.video;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n        segmentTimestampInfo = timeInfo.audio;\n      }\n\n      var probedInfo = {\n        segmentTimestampInfo: segmentTimestampInfo,\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.off();\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group[\"default\"];\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\nvar shouldSwitchToMedia = function shouldSwitchToMedia(_ref) {\n  var currentPlaylist = _ref.currentPlaylist,\n      nextPlaylist = _ref.nextPlaylist,\n      forwardBuffer = _ref.forwardBuffer,\n      bufferLowWaterLine = _ref.bufferLowWaterLine,\n      duration$$1 = _ref.duration,\n      log = _ref.log; // we have no other playlist to switch to\n\n  if (!nextPlaylist) {\n    videojs$1.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  } // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n\n  if (!currentPlaylist.endList) {\n    return true;\n  } // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n\n  if (duration$$1 < Config.MAX_BUFFER_LOW_WATER_LINE) {\n    return true;\n  } // we want to switch down to lower resolutions quickly to continue playback, but\n\n\n  if (nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH) {\n    return true;\n  } // ensure we have some buffer before we switch up to prevent us running out of\n  // buffer while loading a higher rendition.\n\n\n  if (forwardBuffer >= bufferLowWaterLine) {\n    return true;\n  }\n\n  return false;\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        cacheEncryptionKeys = options.cacheEncryptionKeys,\n        sourceType = options.sourceType;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n    _this.hasPlayed_ = false;\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_;\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: _this.tech_.featuresNativeTextTracks\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine();\n\n        if (shouldSwitchToMedia({\n          currentPlaylist: currentPlaylist,\n          nextPlaylist: nextPlaylist,\n          forwardBuffer: forwardBuffer,\n          bufferLowWaterLine: bufferLowWaterLine,\n          duration: _this3.duration(),\n          log: _this3.logger_\n        })) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n\n      if (this.hasPlayed_) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.tech_.setCurrentTime(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.tech_.setCurrentTime(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = true;\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.tech_.setCurrentTime(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n\n      if (playlists.length === 1) {\n        // Never blacklisting this playlist because it's the only playlist\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        videojs$1.log.warn('Removing all playlists from the blacklist because the last ' + 'rendition is about to be blacklisted.');\n        playlists.forEach(function (playlist) {\n          if (playlist.excludeUntil !== Infinity) {\n            delete playlist.excludeUntil;\n          }\n        }); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist, isFinalRendition);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      var suggestedPresentationDelay = this.masterPlaylistLoader_.master.suggestedPresentationDelay;\n      var mainSeekable = Hls.Playlist.seekable(media, expired, suggestedPresentationDelay);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired, suggestedPresentationDelay);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.trigger('dispose');\n\n      if (this.decrypter_) {\n        this.decrypter_.terminate();\n      }\n\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n      this.off();\n\n      if (this.mediaSource.dispose) {\n        this.mediaSource.dispose();\n      }\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistID, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistID];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.id, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    if (!playlists || !playlists.master || !playlists.master.playlists) {\n      return [];\n    }\n\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.id);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.tech_.setCurrentTime(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.13.2\";\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, mainSegmentLoader, audioSegmentLoader) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  var videoMimeType = void 0;\n  var audioMimeType = void 0; // if there is a mimeType associated with the audioSegmentLoader, then the audio\n  // and video mimeType and codec strings are already in the format we need to\n  // pass with the other key systems\n\n  if (audioSegmentLoader.mimeType_) {\n    videoMimeType = mainSegmentLoader.mimeType_;\n    audioMimeType = audioSegmentLoader.mimeType_; // if there is no audioSegmentLoader mimeType, then we have to create the\n    // the audio and video mimeType/codec strings from information extrapolated\n    // from the mainSegmentLoader mimeType (ex. 'video/mp4; codecs=\"mp4, avc1\"' -->\n    // 'video/mp4; codecs=\"avc1\"' and 'audio/mp4; codecs=\"mp4\"')\n  } else {\n    var parsedMimeType = parseContentType(mainSegmentLoader.mimeType_);\n    var codecs = parsedMimeType.parameters.codecs.split(',');\n    var audioCodec = void 0;\n    var videoCodec = void 0;\n    codecs.forEach(function (codec) {\n      codec = codec.trim();\n\n      if (isAudioCodec(codec)) {\n        audioCodec = codec;\n      } else if (isVideoCodec(codec)) {\n        videoCodec = codec;\n      }\n    });\n    videoMimeType = parsedMimeType.type + '; codecs=\"' + videoCodec + '\"';\n    audioMimeType = parsedMimeType.type.replace('video', 'audio') + '; codecs=\"' + audioCodec + '\"';\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n  var videoPlaylist = mainSegmentLoader.playlist_;\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: audioMimeType,\n      videoContentType: videoMimeType\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  var mainSegmentLoader = hlsHandler.masterPlaylistController_.mainSegmentLoader_;\n  var audioSegmentLoader = hlsHandler.masterPlaylistController_.audioSegmentLoader_;\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, mainSegmentLoader, audioSegmentLoader);\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n      // in non-IE11 browsers. In IE11 this is too early to initialize media keys\n\n      if (!(videojs$1.browser.IE_VERSION === 11) && player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.ignoreNextSeekingEvent_ = false;\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    });\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n      this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      }); // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n      this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n      // or qualityLevels_ listeners have already been setup, do nothing.\n\n      if (!player || !player.qualityLevels || this.qualityLevels_) {\n        return;\n      }\n\n      this.qualityLevels_ = player.qualityLevels();\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n      });\n      this.playlists.on('mediachange', function () {\n        handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n      });\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;"],"sourceRoot":""}