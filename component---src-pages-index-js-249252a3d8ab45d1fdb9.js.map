{"version":3,"sources":["webpack:///./src/layouts/MainLayout.jsx","webpack:///./src/pages/index.js"],"names":["Main","styled","main","Content","div","p","theme","breakpoints","xl","MainLayout","children","data","useStaticQuery","GlobalStyles","siteTitle","site","siteMetadata","title","Footer","SongsContainer","SongContainer","Link","GatsbyLink","BackgroundLayer","image","Picture","img","Description","Song","url","bandID","songID","covers","require","song","data-name","to","src","alt","pageQuery","IndexPage","songs","allMarkdownRemark","nodes","console","log","map","key","frontmatter","path","band"],"mappings":"6OAWMA,EAAOC,IAAOC,KAAV,sEAAGD,CAAH,6EAOJE,EAAUF,IAAOG,IAAV,yEAAGH,CAAH,iCAEE,SAAAI,GAAC,OAAIA,EAAEC,MAAMC,YAAYC,MA0BzBC,EAvBI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACdC,EAAOC,yBAAe,cAU5B,OACE,kBAAC,IAAD,CAAeN,MAAOA,KACpB,kBAACO,EAAA,EAAD,MACA,kBAAC,IAAD,CAAQC,UAAWH,EAAKI,KAAKC,aAAaC,QAC1C,kBAACjB,EAAD,KACE,kBAACG,EAAD,KAAUO,IAEZ,kBAACQ,EAAA,EAAD,Q,YC9BAC,EAAiBlB,IAAOG,IAAV,2EAAGH,CAAH,iEAQdmB,EAAgBnB,IAAOG,IAAV,0EAAGH,CAAH,kDAQboB,EAAOpB,YAAOqB,QAAV,iEAAGrB,CAAH,4JAYJsB,EAAkBtB,IAAOG,IAAV,4EAAGH,CAAH,yJACK,SAAAI,GAAC,OAAIA,EAAEmB,SAY3BC,EAAUxB,IAAOyB,IAAV,oEAAGzB,CAAH,0CAOP0B,EAAc1B,IAAOG,IAAV,wEAAGH,CAAH,yHAYX2B,EAAO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,OAAgBb,GAAoB,EAA5Bc,OAA4B,EAApBd,OAAOe,EAAa,EAAbA,OACpCR,EAAQS,UAAQ,KAAmBH,EAApB,IAA8BE,EAAOE,MAC1D,OACE,kBAACd,EAAD,CAAee,YAAU,iBACvB,kBAACd,EAAD,CAAMe,GAAIP,EAAKM,YAAU,QACvB,kBAACV,EAAD,CAASY,IAAKb,EAAOc,IAAKrB,EAAOkB,YAAU,YAC3C,kBAACR,EAAD,KAAcV,GACd,kBAACM,EAAD,CAAiBY,YAAU,kBAAkBX,MAAOA,OAkC/Ce,EAAS,YA2BPC,UAvDG,SAAC,GAIZ,IAFyBC,EAE1B,EAHJ9B,KACE+B,kBAAqBC,MAIvB,OADAC,QAAQC,IAAI,QAASJ,GAEnB,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAKxB,MAAM,SAEX,kBAACE,EAAD,CAAgBgB,YAAU,kBACvBM,EAAMK,KAAI,SAAAZ,GAAI,OACb,kBAAC,EAAD,CACEa,IAAKb,EAAKc,YAAYC,KACtBpB,IAAKK,EAAKc,YAAYC,KACtBC,KAAMhB,EAAKc,YAAYE,KACvBjC,MAAOiB,EAAKc,YAAY/B,MACxBa,OAAQI,EAAKc,YAAYlB,OACzBC,OAAQG,EAAKc,YAAYjB,OACzBC,OAAQE,EAAKc,YAAYhB,OACzBG,YAAU","file":"component---src-pages-index-js-249252a3d8ab45d1fdb9.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled, { ThemeProvider } from \"styled-components\"\n\nimport GlobalStyles from \"../components/GlobalStyles\"\nimport Header from \"../components/header\"\nimport Footer from \"../components/Footer\"\nimport theme from '../utils/theme'\n\n// console.log(\">>> theme\", theme)\n\nconst Main = styled.main`\n  margin-top: 100px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Content = styled.div`\n  display: flex;\n  max-width: ${p => p.theme.breakpoints.xl};\n`\n\nconst MainLayout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <Main>\n        <Content>{children}</Content>\n      </Main>\n      <Footer />\n    </ThemeProvider>\n  )\n}\n\nexport default MainLayout\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Link as GatsbyLink } from \"gatsby\"\nimport styled from \"styled-components\"\n\n// import Layout from \"../components/layout\"\nimport MainLayout from \"../layouts/MainLayout.jsx\"\nimport SEO from \"../components/seo\"\n\n// import coverImage from \"../images/bands/wisdom/marching-for-liberty/cover.jpg\"\n\nconst SongsContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: flex-start;\n  /* background-color: red; */\n  /* padding: 5px; */\n`\n\nconst SongContainer = styled.div`\n  /* outline: 1px solid blue; */\n  position: relative;\n  flex: 0 1 50%;\n  display: flex;\n  /* margin: 0 px; */\n`\n\nconst Link = styled(GatsbyLink)`\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  margin: 10px;\n  z-index: 10;\n`\n\nconst BackgroundLayer = styled.div`\n  background-image: url(${p => p.image});\n  background-size: cover;\n  background-position: center;\n  opacity: 0.3;\n  position: absolute;\n  top: 0%;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 12;\n`\n\nconst Picture = styled.img`\n  display: block;\n  width: 100%;\n  z-index: 14;\n`\n  \n\nconst Description = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  color: white;\n  z-index: 16;\n  width: 100%;\n  font-family: Cardo;\n  font-size: 1.5rem;\n  margin: 10px;\n`\n\nconst Song = ({ url, bandID, songID, title, covers }) => {\n  const image = require(`../images/bands/${bandID}/${covers.song}`)\n  return (\n    <SongContainer data-name=\"SongContainer\">\n      <Link to={url} data-name=\"Link\">\n        <Picture src={image} alt={title} data-name=\"Picture\" />\n        <Description>{title}</Description>\n        <BackgroundLayer data-name=\"BackgroundLayer\" image={image} />\n      </Link>\n    </SongContainer>\n  )\n}\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { nodes: songs },\n  },\n}) => {\n  console.log(\"songs\", songs)\n  return (\n    <MainLayout>\n      <SEO title=\"Home\" />\n\n      <SongsContainer data-name=\"SongsContainer\">\n        {songs.map(song => (\n          <Song\n            key={song.frontmatter.path}\n            url={song.frontmatter.path}\n            band={song.frontmatter.band}\n            title={song.frontmatter.title}\n            bandID={song.frontmatter.bandID}\n            songID={song.frontmatter.songID}\n            covers={song.frontmatter.covers}\n            data-name=\"Song\"\n          />\n        ))}\n      </SongsContainer>\n    </MainLayout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          path\n          covers {\n            song\n          }\n          bandID\n          songID\n          date\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"sourceRoot":""}